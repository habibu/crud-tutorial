{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/contact/CreateContact.js","utils/contacts.js","components/contact/UpdateContact.js","components/utils/Loader.js","components/contact/Contacts.js","components/utils/Cover.js","assets/img/nearest_logo.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","CreateContact","save","useState","firstName","setFirstName","lastName","setLastName","telephone","setTelephone","email","setEmail","show","setShow","handleClose","Button","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","placeholder","onChange","e","value","Footer","disabled","getContact","getContacts","UpdateContact","update","contacts","setContacts","setLoading","getContactById","useCallback","getContactByID","console","log","useEffect","Loader","role","Contacts","loading","getAllContact","addContact","data","contact","uuid4","setContact","then","response","toast","error","Table","striped","bordered","hover","map","indx","Cover","name","coverLogo","style","background","minHeight","src","alt","App","balance","setBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.19b5a8c3.chunk.js","sourcesContent":["/* eslint-disable no-undef */\nconst CONTRACT_NAME = process.env.CONTRACT_NAME || 'mycontact.habib_a.testnet';\n\nfunction environment(env) {\n  switch (env) {\n    case \"mainnet\": \n      return {\n        networkId: \"mainnet\",\n        nodeUrl: \"https://rpc.mainnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.near.org\",\n        helperUrl: \"https://helper.mainnet.near.org\",\n        explorerUrl: \"https://explorer.mainnet.near.org\",\n      };\n    case \"testnet\": \n      return {\n        networkId: \"testnet\",\n        nodeUrl: \"https://rpc.testnet.near.org\",\n        contractName: CONTRACT_NAME,\n        walletUrl: \"https://wallet.testnet.near.org\",\n        helperUrl: \"https://helper.testnet.near.org\",\n        explorerUrl: \"https://explorer.testnet.near.org\",\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;","import environment from \"./config\";\nimport {connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst nearEnv = environment(\"testnet\");\n\nexport async function initializeContract() {\n    const near = await connect(\n        Object.assign(\n            { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore()}},\n            nearEnv\n        )\n    );\n    window.walletConnection = new WalletConnection(near);\n\n    window.accountId = window.walletConnection.getAccountId();\n    window.contract = new Contract(\n        window.walletConnection.account(),\n       \n        nearEnv.contractName,\n        {\n            viewMethods: [\"getContact\", \"getContacts\"],\n            changeMethods: [\"setContact\", \"deleteContact\", \"updateContact\"]\n        }\n    );\n}\n\nexport async function accountBalance() {\n    return formatNearAmount(\n        (await window.walletConnection.account().getAccountBalance()).total,\n        \n    );\n}\n\nexport async function getAccountId() {\n    return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n    window.walletConnection.requestSignIn(nearEnv.contractName);\n   \n}\n\nexport function logout() {\n    window.walletConnection.signOut();\n    window.location.reload();\n}\n\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\n\nconst Wallet = ({address, amount, symbol, destroy}) => {\n    if(address) {\n        return (\n            <>\n                <Dropdown>\n                    <Dropdown.Toggle\n                        variant=\"light\"\n                        align=\"end\"\n                        id=\"dropdown-basic\"\n                        className=\"d-flex align-items-center border rounded-pill py-1\"\n                    >\n                        { amount ?\n                        <>\n                            {amount} <span className=\"ms-1\"> {symbol}</span>\n                        </>\n                            : \n                            <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\"/>\n\n                        }\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className=\"shadow-lg border-0\">\n                        <Dropdown.Item \n                            href={`https://explorer.testnet.near.org/accounts/${address}`}\n                            target=\"_blank\">\n                                <Stack direction=\"horinzontal\" gap={2}>\n                                    <i className=\"bi bi-person-circle fs-4\" />\n                                    <span className=\"font-monospace\">{address}</span>\n                                </Stack>\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item\n                            as=\"button\"\n                            className=\"d-flex align-items-center\"\n                            onClick={()=>{\n                                destroy();\n                            }}\n                        >\n                            <i className=\"bi bi-box-arrow-right me-2 fs-4\"/>\n                            Disconnect\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n    return null;\n};\n\nexport default Wallet;","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Notification = ()=> (\n    <ToastContainer \n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable={false}\n        pauseOnHover\n    \n    />\n);\nconst NotificationSuccess = ({text}) => (\n    <div>\n        <i  className=\"bi bi-x-circle-fill text-success mx-2\"/>\n        <span className=\"text-secondary mx-1\">{text}</span>\n    </div>\n);\n\nconst NotificationError = ({text}) => (\n    <div>\n        <i className=\"bi bi-x-circle-fill text-danger mx-2\"/>\n        <span className=\"text-secondary  mx-1\">{text}</span>\n    </div>\n)\nconst Props = {\n    text: PropTypes.string\n};\n\nconst DefaultProps = {\n    text: \"\"\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\n\nexport {Notification, NotificationSuccess, NotificationError};\n\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\n\nconst CreateContact = ({ save }) => {\n    const [ firstName, setFirstName] = useState(\"\");\n    const [ lastName, setLastName ] = useState(\"\");\n    const [ telephone, setTelephone ] = useState(\"\");\n    const [ email, setEmail ] = useState(\"\");\n    const isFormFilled = ()=> firstName && lastName && telephone && email;\n    const [show, setShow ] = useState(false);\n\n    const handleClose = ()=> setShow(false); \n    const handleShow = ()=> setShow(true);\n\n    return (\n        <>\n            <Button\n                onClick={handleShow}\n                variant=\"outline-dark\"\n                className=\"w-99 px-2\"\n                \n            >\n               Add Contact\n            </Button>\n            <Modal show={show} onHide={handleClose} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add New Contact</Modal.Title>\n                </Modal.Header>\n                <Form>\n                    <Modal.Body>\n                        <FloatingLabel \n                            controlId=\"inputFirstName\"\n                            label=\"Fist Name\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control \n                                type=\"text\"\n                                placeholder=\"Enter your first name\"\n                                onChange={ (e)=>{\n                                    setFirstName(e.target.value);\n                                }}\n                                \n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            controlId=\"inputlastName\"\n                            label=\"Last Name\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control \n                                type=\"text\"\n                                placeholder=\"Enter your last name\"\n                                onChange={ (e) => {\n                                    setLastName(e.target.value);\n                                }}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            controlId=\"inputTelephone\"\n                            label=\"Phone Number\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control \n                                type=\"text\"\n                                placeholder=\"(+333) 3333 3333\"\n                                onChange={ (e)=>{\n                                    setTelephone(e.target.value);\n                                }}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            controlId=\"inputEmail\"\n                            label=\"Email Address\"\n                            className=\"mb-3\"\n                        >\n                            <Form.Control \n                                type=\"email\"\n                                placeholder=\"your_email@email.com\"\n                                onChange={(e)=>{\n                                    setEmail(e.target.value);\n                                }}\n                            />\n                        </FloatingLabel>\n                    </Modal.Body>\n                </Form>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>Cancel</Button>\n                    <Button variant=\"outline-dark\"\n                            disabled={!isFormFilled()}\n                            onClick={()=>{\n                                save({\n                                    firstName,\n                                    lastName,\n                                    telephone,\n                                    email\n                                });\n                                handleClose();\n                            }}\n                    >\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n\n    );\n};\nCreateContact.propTypes = {\n    save: PropTypes.func.isRequired\n};\n\nexport default CreateContact;","import { v4 as uuid4 } from \"uuid\";\n\nexport function createContact(contact) {\n    contact.id = uuid4();\n    return window.contract.setContact({contact});\n\n}\n\nexport function getContacts(){\n    return window.contract.getContacts();\n}\n\nexport function getContact(id){\n    return window.contract.getContacts(id);\n}\n\n\nexport function deleteContact(id){\n    id = uuid4();\n    return window.contract.deleteContact(id);\n}\n\nexport function updateContact(id, contact) {\n    return window.contract.updateContact(id, contact);\n}","/* eslint-disable no-unused-vars */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\nimport { getContact as getContactByID } from \"../../utils/contacts\";\n\n\nconst UpdateContact = ({ update }) => {\n    const [ firstName, setFirstName] = useState(\"\");\n    const [ lastName, setLastName ] = useState(\"\");\n    const [ telephone, setTelephone ] = useState(\"\");\n    const [ email, setEmail ] = useState(\"\");\n    const [contacts, setContacts] = useState([]);\n    const isFormFilled = ()=> firstName && lastName && telephone && email;\n    const [show, setShow ] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const handleClose = ()=> setShow(false); \n    const handleShow = ()=> setShow(true);\n\n    const getContactById = useCallback(async (id)=> {\n        try {\n            setLoading(true);\n            setContacts( await getContactByID(id));\n            \n        } catch (error) {\n            console.log(error);\n        }finally{\n            setLoading(false);\n        }\n    }, []);\n\n   \n    useEffect( ()=> {\n        getContactById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n   \n    \n    return (\n        <>\n            <Button\n                onClick={handleShow}\n                variant=\"outline-dark\"\n                className=\"w-99 px-2\"\n                \n            >\n               Update Contact\n            </Button>\n            <Modal show={show} onHide={handleClose} centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Contact</Modal.Title>\n                </Modal.Header>\n                <Form>\n                    <Modal.Body>\n                        { \n                        <><FloatingLabel\n                                controlId=\"inputFirstName\"\n                                label=\"Fist Name\"\n                                className=\"mb-3\"\n                            >\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter your first name\"\n                                    value={contacts.firstName}\n                                    onChange={(e) => {\n                                        setFirstName(e.target.value);\n                                    } } />\n                            </FloatingLabel><FloatingLabel\n                                controlId=\"inputlastName\"\n                                label=\"Last Name\"\n                                className=\"mb-3\"\n                            >\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter your last name\"\n                                        value={contacts.lastName}\n                                        onChange={(e) => {\n                                            setLastName(e.target.value);\n                                        } } />\n                                </FloatingLabel><FloatingLabel\n                                    controlId=\"inputTelephone\"\n                                    label=\"Phone Number\"\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"(+333) 3333 3333\"\n                                        value={contacts.telephone}\n                                        onChange={(e) => {\n                                            setTelephone(e.target.value);\n                                        } } />\n                                </FloatingLabel><FloatingLabel\n                                    controlId=\"inputEmail\"\n                                    label=\"Email Address\"\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"your_email@email.com\"\n                                        value={contacts.email}\n                                        onChange={(e) => {\n                                            setEmail(e.target.value);\n                                        } } />\n                                </FloatingLabel></>\n                        }\n                    </Modal.Body>\n                </Form>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>Cancel</Button>\n                    <Button variant=\"outline-dark\"\n                            disabled={!isFormFilled()}\n                            onClick={()=>{\n                                update({\n                                    firstName,\n                                    lastName,\n                                    telephone,\n                                    email\n                                });\n                                handleClose();\n                            }}\n                    >\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n\n    );\n};\nUpdateContact.propTypes = {\n    update: PropTypes.func.isRequired\n};\n\nexport default UpdateContact;","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = ()=> (\n    <div className=\"d-flex justify-content-center\">\n        <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n            <span>Loading...</span>\n        </Spinner>\n    </div>\n);\n\nexport default Loader;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport CreateContact from \"./CreateContact\";\nimport UpdateContact from \"./UpdateContact\";\nimport Loader from \"../utils/Loader\";\nimport { Table } from \"react-bootstrap\";\nimport { NotificationSuccess, NotificationError } from \"../utils/Notifications\";\nimport { getContacts as getContactList, createContact} from \"../../utils/contacts\"\n\nconst Contacts = ()=> {\n    const [contacts, setContacts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n    const getAllContact = useCallback(async ()=> {\n        try {\n            setLoading(true);\n            setContacts( await getContactList());\n        } catch (error) {\n            console.log(error);\n        }finally{\n            setLoading(false);\n        }\n    }, []);\n\n    const addContact = async (data) =>{\n        try {\n            setLoading(true);\n            createContact(data).then( (response)=> {\n                getAllContact();\n            });\n            toast(<NotificationSuccess text=\"Contact added successfully. \"/>);\n        } catch (error) {\n            console.log(error);\n            toast(<NotificationError text=\"Failed to create contact.\"/>);\n        } finally{\n            setLoading(false)\n        }\n    };\n\n\n    useEffect( ()=> {\n        getAllContact();\n    }, []);\n\n    return (\n        <>\n            {!loading ?\n            <>\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                    <h3>Contact List</h3>\n                    <CreateContact save={addContact} />\n                </div>\n                <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>S/No</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Phone Numer</th>\n                                <th>Email</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                                {contacts.map( (contact, indx) => (\n                                    <tr key={indx}>\n                                        <td>{indx + 1}</td>\n                                        <td>{contact.firstName}</td>\n                                        <td>{contact.lastName}</td>\n                                        <td>{contact.telephone}</td>\n                                        <td>{contact.email}</td>\n                                        <td>\n                                           <UpdateContact \n                                                        update={addContact}\n                                                        />\n                                        </td>\n                                </tr>\n                                ))}\n                                \n                        </tbody>\n                    </Table>\n            </>\n            : <Loader />\n\n            }\n        </>\n    );\n};\nexport  {Contacts};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ name, login, coverLogo }) => {\n    if ((name, login, coverLogo)){\n        return (\n            <div \n                className=\"d-flex justify-content-center flex-column text-center\"\n                style={{ background:\"#b2b2b2\", minHeight:\"100vh\"}}\n                >\n                <div className=\"mt-5 mb-5\">\n                    <img src={coverLogo} alt=\"Nearest Logo\"/>\n                    <h5>Verified and Permanent Record made Easy...</h5>\n                   <h3>Please connect your wallet to start</h3>\n                    <Button \n                        onClick={login}\n                        variant=\"outline-light\"\n                        className=\"rounded-pill px-3 mt-3\"\n                        >\n                        Connect Wallet\n                    </Button>\n                </div>\n                \n                <p>Developed by Habibu (c) 2022 and Powered by NEAR</p>\n               \n            </div>\n        );\n    }\n    return null;\n};\nCover.propTypes = {\n    name:PropTypes.string,\n};\nCover.defaultProps = {\n    name: \"\"\n};\n\nexport default Cover;\n","export default __webpack_public_path__ + \"static/media/nearest_logo.445a8087.jpg\";","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable-next-line */\nimport React, {useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { login, logout as destroy, accountBalance} from \"./utils/near\";\nimport Wallet from \"./components/Wallet\";\nimport { Notification } from \"./components/utils/Notifications\";\nimport { Contacts } from \"./components/contact/Contacts\";\nimport Cover from \"./components/utils/Cover\";\nimport coverLogo  from \"./assets/img/nearest_logo.jpg\";\nimport {Container, Nav } from \"react-bootstrap\";\n\n\n\nconst App = function AppWrapper(){\n  const account = window.walletConnection.account();\n  const [balance, setBalance] = useState(\"0\");\n   //let coverLogo = \"./assets/img/nearest_logo.jpg\";\n  \n  const getAccountBalance = useCallback( async ()=> {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n  useEffect( ()=> {\n    getAccountBalance();\n  }, [getAccountBalance]);\n\n  return(\n    <>\n   \n      < Notification />\n      {account.accountId ? \n       <Container fluid=\"md\">\n          <Nav className=\"justify-content-end pt-3 pb-5\">\n            <Nav.Item>\n              <Wallet \n                address={account.accountId}\n                amount={balance}\n                symbol=\"NEAR\"\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <main>\n            <Contacts /> \n          </main>\n       </Container>\n        :\n          <Cover name=\"Contact List\" login={login} coverLogo={coverLogo}>CONNECT WALLET</Cover>\n      }\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();"],"sourceRoot":""}